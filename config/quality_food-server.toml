#Luck will affect how often each quality will be tried for (10 luck * 0.25 multiplier -> 2.5 rolls, meaning 2 rolls and 50% chance for another)
# Default: 0.25
# Range: 0.0 ~ 10.0
luck_multiplier = 0.25
#The chance of quality crops dropping it's own quality (also affects other qualities)
#Example for Gold (20 -> 0.6 / 0.03) the chances for all qualities would then be: 20 * 0.10 (iron) = 2 (100%) | 20 * 0.03 (gold) = 0.6 (60%) | 20 * 0.005 = 0.1 (10%)
# Default: 0.6
# Range: 0.0 ~ 1.0
crop_target_chance = 0.6
#Multiplier on top of the crop target chance
# Default: 0.25
# Range: 0.0 ~ 100.0
seed_chance_multiplier = 0.25
#Define multipliers to be applied per farmland on crops - Syntax: <index>;<crop>;<farmland>;<multiplier>
#(the index defines the sequence in which they will be checked - the first matching one is applied)
farmland_config = []

[Crafting]
	#Define recipes (namespace:path) which should not result in quality being applied (e.g. when the items can be converted back and forth)
	no_quality_recipes = ["minecraft:hay_block", "minecraft:wheat", "quark:building/crafting/compressed/apple_crate", "quark:building/crafting/compressed/apple_crate_uncompress", "quark:building/crafting/compressed/beetroot_crate", "quark:building/crafting/compressed/beetroot_crate_uncompress", "quark:building/crafting/compressed/berry_sack", "quark:building/crafting/compressed/berry_sack_uncompress", "quark:building/crafting/compressed/carrot_crate", "quark:building/crafting/compressed/carrot_crate_uncompress", "quark:building/crafting/compressed/chorus_fruit_block", "quark:building/crafting/compressed/chorus_fruit_block_uncompress", "quark:building/crafting/compressed/cocoa_bean_sack", "quark:building/crafting/compressed/cocoa_bean_sack_uncompress", "quark:building/crafting/compressed/glowberry_sack", "quark:building/crafting/compressed/glowberry_sack_uncompress", "quark:building/crafting/compressed/golden_apple_crate", "quark:building/crafting/compressed/golden_apple_crate_uncompress", "quark:building/crafting/compressed/golden_carrot_crate", "quark:building/crafting/compressed/golden_carrot_crate_uncompress", "quark:building/crafting/compressed/potato_crate", "quark:building/crafting/compressed/potato_crate_uncompress", "quark:building/crafting/compressed/sugar_cane_block", "quark:building/crafting/compressed/sugar_cane_block_uncompress", "farmersdelight:carrot_crate", "farmersdelight:carrot_from_crate", "farmersdelight:potato_crate", "farmersdelight:potato_from_crate", "farmersdelight:beetroot_crate", "farmersdelight:beetroot_from_crate", "farmersdelight:cabbage_crate", "farmersdelight:cabbage", "farmersdelight:tomato_crate", "farmersdelight:tomato", "farmersdelight:onion_crate", "farmersdelight:onion", "farmersdelight:rice_bale", "farmersdelight:rice_panicle", "farmersdelight:rice_bag", "farmersdelight:rice_from_bag", "vinery:white_grape_crate", "vinery:white_grape", "vinery:red_grape_crate", "vinery:red_grape", "vinery:cherry_crate", "vinery:cherries", "vinery:apple_crate", "vinery:apples", "supplementaries:sugar_cube", "supplementaries:sugar_cube_uncrafting", "cratedelight:apple_crate", "cratedelight:apples", "cratedelight:beetroot_crate", "cratedelight:beetroots", "cratedelight:berry_crate", "cratedelight:berries", "cratedelight:brown_mushroom_crate", "cratedelight:brown_mushroom", "cratedelight:carrot_crate", "cratedelight:carrots", "cratedelight:cocoabeans_bag", "cratedelight:cocoabeans", "cratedelight:cod_crate", "cratedelight:cod", "cratedelight:egg_crate", "cratedelight:eggs", "cratedelight:glowberry_crate", "cratedelight:glowberries", "cratedelight:golden_apple_crate", "cratedelight:golden_apple", "cratedelight:golden_carrot_crate", "cratedelight:golden_carrot", "cratedelight:potato_crate", "cratedelight:potatoes", "cratedelight:red_mushroom_crate", "cratedelight:red_mushroom", "cratedelight:salmon_crate", "cratedelight:salmon", "cratedelight:stacked_melons", "cratedelight:melons", "cratedelight:stacked_pumpkins", "cratedelight:pumpkins", "cratedelight:sugar_bag", "cratedelight:sugar", "alexsmobs:banana_crate", "alexsmobs:bananas", "alexsmobs:caiman_egg_crate", "alexsmobs:caiman_egg", "alexsmobs:crocodile_egg_crate", "alexsmobs:crocodile_egg", "alexsmobs:emu_egg_crate", "alexsmobs:emu_egg", "alexsmobs:platypus_egg_crate", "alexsmobs:platypus_egg", "alexsmobs:terrapin_egg_crate", "alexsmobs:terrapin_egg", "betterend:end_fish_crate", "betterend:end_fish", "create:wheat_flour_bag", "create:wheat_flour", "diamond_apples:diamond_apple_crate", "diamond_apples:diamond_apples", "farmersdelight:stacked_melons", "farmersdelight:stacked_pumpkins", "jagmkiwis:kiwi_egg_crate", "jagmkiwis:kiwi_egg", "jagmkiwis:kiwi_fruit_crate", "jagmkiwis:kiwi_fruit", "naturalist:bass_crate", "naturalist:bass", "naturalist:catfish_crate", "naturalist:catfish", "naturalist:duck_egg_crate", "naturalist:duck_eggs", "nutritious_feast:blueberry_crate", "nutritious_feast:blueberries", "farm_and_charm:lettuce_bag", "farm_and_charm:lettuce", "farm_and_charm:tomato_bag", "farm_and_charm:tomato", "farm_and_charm:carrot_bag", "farm_and_charm:carrot_from_bag", "farm_and_charm:potato_bag", "farm_and_charm:potato_from_bag", "farm_and_charm:onion_bag", "farm_and_charm:onion_from_bag", "farm_and_charm:beetroot_bag", "farm_and_charm:beetroot_from_bag", "farm_and_charm:corn_bag", "farm_and_charm:corn_from_bag", "farm_and_charm:strawberry_bag", "farm_and_charm:strawberry_from_bag", "farm_and_charm:flour_bag", "farm_and_charm:flour_from_bag", "farm_and_charm:oat_ball", "farm_and_charm:oat_from_ball", "farm_and_charm:barley_ball", "farm_and_charm:barley_from_ball"]
	#Define recipes (namespace:path) which should result in the quality should be always be applied to the result (only if all ingredients have the same quality)
	retain_quality_recipes = ["minecraft:sugar_from_sugar_cane", "minecraft:sugar_from_honey_bottle", "cratedelight:stacked_melons", "cratedelight:melons", "cratedelight:stacked_pumpkins", "cratedelight:pumpkins", "farmersdelight:stacked_melons", "farmersdelight:stacked_pumpkins"]
	#Defines whether (de)compacting should be handled automatically (in terms of retaining quality)
	handle_compacting = true
	#Attempt to handle recipes involving seed items automatically (to avoid having to add all of them to the retain_quality_recipes config)
	handle_seed_recipes = true
